name: Python AI Server CI/CD

on:
  push:
    branches: [ main, develop ]
    paths: [ 'ai-server/**' ]
  pull_request:
    branches: [ main ]
    paths: [ 'ai-server/**' ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      working-directory: ./ai-server
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run tests
      working-directory: ./ai-server
      run: |
        pytest tests/ -v
    
    - name: Lint with flake8
      working-directory: ./ai-server
      run: |
        pip install flake8
        flake8 app/ --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 app/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      working-directory: ./ai-server
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Build Docker image
      working-directory: ./ai-server
      run: |
        # Dockerfile이 있다면 빌드
        if [ -f Dockerfile ]; then
          docker build -t webtoon-diary-ai-server .
        fi
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ai-server-build
        path: ai-server/
